#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <FirebaseESP8266.h>
#include <ArduinoJson.h>

// Wi-Fi Credentials
const char* ssid = "A";
const char* password = "1234567890";

// Firebase Configuration
FirebaseConfig config;
FirebaseAuth auth;

// Firebase Database URL & Secret Key
#define FIREBASE_HOST ""
#define FIREBASE_AUTH ""

// FCM v1 API (Firebase Cloud Messaging)
const char* fcmServer = "fcm.googleapis.com";
const int fcmPort = 443;
const char* fcmUrl = "/v1/projects/gps-and-vibration/messages:send";

// OAuth 2.0 Bearer Token (Replace with valid token)
String bearerToken = ""
// FCM Device Token
String deviceToken = "";

// Vibration Threshold
const float vibrationThreshold = 9.20;

// Secure WiFi Client for HTTPS
WiFiClientSecure client;
FirebaseData firebaseData;

void setup() {
    Serial.begin(115200);
    delay(1000);

    // Connect to Wi-Fi
    WiFi.begin(ssid, password);
    Serial.print("Connecting to WiFi...");
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nConnected to WiFi!");

    // Firebase Setup
    config.host = FIREBASE_HOST;
    config.signer.tokens.legacy_token = FIREBASE_AUTH;
    Firebase.begin(&config, &auth);
    Firebase.reconnectWiFi(true);

    // Enable SSL Certificate Verification
    client.setInsecure();  // Ignore SSL certificate validation
}

void loop() {
    if (Firebase.getFloat(firebaseData, "/sensorData/vibration")) {  // Read vibration value from Firebase
        float vibrationValue = firebaseData.floatData();
        Serial.print("🌍 Earthquake Alert: Stay Safe!");
        Serial.println(vibrationValue);

        if (vibrationValue > vibrationThreshold) {  // Check threshold
            Serial.println("⚠ An earthquake has been detected in your area. Take cover immediately and follow safety precautions. Stay tuned for updates!");
            sendPushNotification();
            delay(5000);  // Prevent spam
        }
    } else {
        Serial.print("Firebase Read Error: ");
        Serial.println(firebaseData.errorReason());
    }

    delay(1000);  // Check Firebase every second
}

void sendPushNotification() {
    Serial.println("Sending Push Notification...");

    if (!client.connect(fcmServer, fcmPort)) {
        Serial.println("Connection to FCM failed!");
        return;
    }

    // Create JSON payload using ArduinoJson
    DynamicJsonDocument doc(512);
    doc["message"]["token"] = deviceToken;
    doc["message"]["notification"]["title"] = "Vibration Alert!";
    doc["message"]["notification"]["body"] = "Excessive vibration detected! Check Firebase.";

    String payload;
    serializeJson(doc, payload);

    // Prepare HTTP request
    String request = String("POST ") + fcmUrl + " HTTP/1.1\r\n" +
                     "Host: " + fcmServer + "\r\n" +
                     "Authorization: Bearer " + bearerToken + "\r\n" +
                     "Content-Type: application/json\r\n" +
                     "Content-Length: " + String(payload.length()) + "\r\n\r\n" +
                     payload;

    // Send request
    client.print(request);

    // Read response
    while (client.available()) {
        String response = client.readString();
        Serial.println(response);
    }

    Serial.println("Push Notification Sent!");
    client.stop();
}
